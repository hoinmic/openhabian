val logName = "illumination"

//------------------------------------------------------------
// Power switch changes
rule "Illumination Turn OFF"
when
  System started or
  Item floorlamp_switch changed to OFF
then
  floorlamp_switch.sendCommand(OFF)
  logInfo(logName, "Send command turn off")
end

rule "Turn ON Illumination"
when
  Item floorlamp_switch changed to ON
then
  floorlamp_switch.sendCommand(ON)
  logInfo(logName, "Send command turn on")
end

//------------------------------------------------------------
// Manually action: Handle local button (power switch)
rule "Illumination Local button"
when
  Item floorlamp_relay changed
then
  // Manually turned on?
  if ((floorlamp_relay.state.toString == "true") &&
      (floorlamp_switch.state == OFF ))
  {
    floorlamp_switch.postUpdate(ON)
    logInfo(logName, "Locally turned ON")
  }
  // Manually turned off?
  if ((floorlamp_relay.state.toString == "false") &&
      (floorlamp_switch.state == ON ))
  {
    floorlamp_switch.postUpdate(OFF)
    logInfo(logName, "Locally turned OFF")
  }
end

//------------------------------------------------------------
// Automatic action: Absence of family and sunset
rule "Illumination Sunset Rule"
when
  Item timeOfDay changed or
  Item absence changed
then
  if (absence.state == "TRUE")
  {
    if((timeOfDay.state == "MORNING") || (timeOfDay.state == "EVENING"))
    {
      floorlamp_switch.postUpdate(ON)
      logInfo(logName, "Automatic turned on: Morning/Evening + nobody at home")
    }
    else
    {
      floorlamp_switch.postUpdate(OFF)
      logInfo(logName, "Automatic turned off: nobody at home")
    } 
  }
  else
  {
    floorlamp_switch.postUpdate(OFF)
    logInfo(logName, "No illumination change, someone at home")
  }
end

