import org.openhab.model.script.actions.Timer

var Timer timer = null


// User Interface
rule "Turn OFF"
when
  Item dehumidifier_switch changed to OFF
then
  dehumidifier_switch.sendCommand(OFF)
end

rule "Turn ON"
when
  Item dehumidifier_switch changed to ON
then
  dehumidifier_switch.sendCommand(ON)

  // After a timeout, turn the dehumidifier off
  (if timer === null)
  {
    timer = createTimer(now.plusMinutes(60*4)) [|
          dehumidifier_switch.postUpdate(OFF)
          timer = null   // reset the timer
      ]
  }
end

// Handle local button (power switch)
rule "Local button"
when
  Item dehumidifier_relay changed
then
  // Manually turned on?
  if ((dehumidifier_relay.state.toString == "true") &&
      (dehumidifier_switch.state == OFF ))
  {
    dehumidifier_switch.postUpdate(ON)
    logInfo("dehumidifier", "Locally turned ON")
  }
  // Manually turned off?
  if ((dehumidifier_relay.state.toString == "false") &&
      (dehumidifier_switch.state == ON ))
  {
    dehumidifier_switch.postUpdate(OFF)
    logInfo("dehumidifier", "Locally turned OFF")
  }
end

// Close to maximum humidity (low tariff)
rule "Maximum Humidity"
when
  Item humidity_htShelly_01 changed or
  Item low_tariff changed
then
  if ((humidity_htShelly_01 >= (maxHumidity - 5) &&
      (low_tariff.state.toString == "TRUE"))
  {
    dehumidifier_switch.postUpdate(ON)
    logInfo("dehumidifier", "Close to maximum humidity (low tariff). Humidity: " + humidity_htShelly_01)
  }
end

// Exceed maximum humidity (tariff doesn't matter)
rule "Maximum Humidity"
when
  Item humidity_htShelly_01 > maxHumidity
then
  if (humidity_htShelly_01 >= maxHumidity)
  {
    dehumidifier_switch.postUpdate(ON)
    logInfo("dehumidifier", "Exceed maximum humidity. Humidity: " + humidity_htShelly_01)
  }
end